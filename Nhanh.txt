# Nhanh
- git remote add origin <url remote>

- Sửa config file khắc phục lỗi config: git config --global/system --edit -> kéo xuống -> Insert -> xóa config gây lỗi -> Esc -> :wq!

- git status -s
git log --oneline --graph

- Trở về 1 commit cũ trên 1 nhánh mới: git checkout <hash nhánh cũ> -> git checkout -b <tên nhánh>

- Merge nhánh A vào nhánh B: git checkout <nhánh B> -> git merge <nhánh A> -m "có thể bỏ" -> resolve conflict -> git add . -> git commit -m "messge"

- Để rebase nhánh A có base là nhánh B: git checkout <nhánh A> -> git rebase <nhánh B> -> resolve conflict -> git add . -> git rebase --continue -> Insert -> sửa thông tin các commit -> Esc -> :wq!

- Để sửa, gộp N commit cũ mới nhất và ép remote và mọi người đồng bộ với nó: git rebase -i HEAD~N -> i -> sửa các commit (p là giữ commit, s là vẫn dùng commit này nhưng đè vào commit trước đó, r là giữ commit này nhưng viết lại message, từ trên xuống là commit từ cũ đến mới, xóa dòng commit nào để xóa commit đó) -> Esc -> :wq! -> resolve conflict -> git add . -> git rebase --continue -> i -> sửa message nếu cần -> Esc -> :wq! -> git push origin +<tên nhánh> để push lên remote -> những người khác vào đồng bộ sẽ bị conflict thì phải dùng git pull --rebase
 
- git checkout remotes/<tên nhánh remote> => chuyển sang nhánh ở remote k có ở Local
git checkout -b <tên nhánh mới ở local> origin/<tên nhánh remote> => tạo 1 nhánh mới ở local giống 1 nhánh ở remote

- git add -u => staged các file đã được add từ trước, bỏ qua các file untracked

- git commit --amend -m "message" 

- git branch -a => xem mọi nhánh cả remote cả local
git branch -v => liệt kê mọi nhánh và commit cuối

- git branch -d <tên branch> => xóa nhánh ở local
git push origin --delete <tên branch> => xóa nhánh ở remote

- git checkout <hash> <link file/-- .> => phục hồi lại file ở commit nào, phục hồi xong nó tự động đã được git add rồi
git checkout <link file> => phục hồi lại 1 file nào ở commit cuối cùng

- git branch -m "old_branch" "new_branch" => đổi tên branch

- git reset --hard <hash> => quay lại đến commit nào

- git rm -r --cached => sau khi thêm mới .gitignore 

- git remote set-url origin <git url> => thay vì xóa r add lại, ta có thể set add lại luôn

- git clone --single-branch --branch <branchname> <remote-repo> => chỉ clone 1 branch từ remote

- git reset --soft HEAD~1 => hủy commit cuối và mọi thay đổi ở commit cuối chuyển vào vùng staging
git reset --hard HEAD~1 => hủy commit cuối và undo mọi thay đổi ở các file, nếu chưa push lên remote thì lệnh này làm mất dữ liệu file
git reset --hard => undo các lệnh git add mới nhất và mất dữ liệu file, quay về y như commit cuối cùng
git reset => undo các lệnh git add và file đã sửa đổi thành modified chưa được add

- git diff => khác biệt của working tree với commit cuối
git diff --staged => khác biệt của vùng staged với commit cuối
git diff hash1 hash2 => khác biệt 2 commit
git diff branch1 branch2 => khác biệt 2 branch

- Đang làm việc ở branch A, người khác push lên 1 branch mới toanh là B, ta cần merge branch B vào A
Nếu git branch -a sẽ k thấy nhánh B vì nó mới push lên, phải chạy git fetch sẽ thấy nhánh B. Ta checkout nhánh B sẽ đang ở nhánh tạm có nội dung giống nhánh B ở local. Đặc điểm của nhánh tạm này là đổi nhánh sẽ mất và k thể quay lại -> ta phải checkout -b B tiếp từ nhánh tạm để có nhánh B thực sự ở local. 
Đang ở branch A, git merge branch B sẽ merge branch B vào A



# Các lỗi
- git config core.longpaths true => Lỗi file name too long 

- Lỗi: unable to access The requested URL returned error: 400 k cho push => ta dùng: git remote rm origin -> add lại remote origin

- Fix lỗi đăng nhập password k được mà phải dùng personmal access token:
https://stackoverflow.com/questions/68775869/support-for-password-authentication-was-removed-please-use-a-personal-access-to
=> khi push mà yêu cầu nhập thì username là token, password bỏ trống

- Lỗi server hang up unexpected gây ra khi ta push lên git 1 lượng file lớn chỉ trong 1 lần nhưng băng thông mạng kém. Lỗi này nhiều lúc cũng xảy ra theo nhiều hướng dù chỉ đổi có 1 tí nhưng cũng k commit lên được. Có nhiều lệnh giúp fix:
git config --global http.version HTTP/1.1 => lỗi này rất có thể do HTTP/2 đang dùng k phù hợp, chuyển về phiên bản cũ HTTP/1.1 rồi push thử r chuyển lại HTTP/2 sau
git config http.postBuffer 524289000 => tăng lượng buffer để 1 lần có thể push nhiều hơn

- Lỗi SSL cerfiticate: K nên tắt verifySSL vì có thể bị tấn công bằng man in the middle. Ở phiên bản git hiện tại của window, có thể config cho git sử dụng schannel thay vì curl CA như trước. 
Set với: git config --global http.sslbackend schannel


